<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simon.dal.dao.PlaceRecordMapper" >
  <resultMap id="BaseResultMap" type="com.simon.dal.model.PlaceRecord" >
    <id column="record_id" property="recordId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="place_id" property="placeId" jdbcType="VARCHAR" />
    <result column="order_date" property="orderDate" jdbcType="DATE" />
    <result column="order_start_time" property="orderStartTime" jdbcType="TIME" />
    <result column="order_end_time" property="orderEndTime" jdbcType="TIME" />
    <result column="record_status" property="recordStatus" jdbcType="CHAR" />
    <result column="total_hour" property="totalHour" jdbcType="INTEGER" />
    <result column="average_charge" property="averageCharge" jdbcType="DECIMAL" />
    <result column="attach_charge" property="attachCharge" jdbcType="DECIMAL" />
    <result column="total_charge" property="totalCharge" jdbcType="DECIMAL" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <association property="place" javaType="com.simon.dal.model.Place">
      <id column="place_id" property="placeId" jdbcType="VARCHAR" />
      <result column="community_id" property="communityId" jdbcType="VARCHAR" />
      <result column="place_name" property="placeName" jdbcType="VARCHAR" />
      <result column="place_traditional_name" property="placeTraditionalName" jdbcType="VARCHAR" />
      <result column="place_english_name" property="placeEnglishName" jdbcType="VARCHAR" />
      <result column="place_status" property="placeStatus" jdbcType="INTEGER" />
      <result column="place_start_time" property="placeStartTime" jdbcType="TIME" />
      <result column="place_end_time" property="placeEndTime" jdbcType="TIME" />
      <result column="place_need_order" property="placeNeedOrder" jdbcType="INTEGER" />
      <result column="place_upper_limit" property="placeUpperLimit" jdbcType="INTEGER" />
      <result column="place_advance_order_day" property="placeAdvanceOrderDay" jdbcType="INTEGER" />
      <result column="place_farthest_order_day" property="placeFarthestOrderDay" jdbcType="INTEGER" />
      <result column="place_icon_type" property="placeIconType" jdbcType="INTEGER" />
      <result column="place_introduction" property="placeIntroduction" jdbcType="LONGVARCHAR" />
      <result column="place_traditional_introduction" property="placeTraditionalIntroduction" jdbcType="LONGVARCHAR" />
      <result column="place_english_introduction" property="placeEnglishIntroduction" jdbcType="LONGVARCHAR" />
      <result column="place_charge" property="placeCharge" jdbcType="DECIMAL" />
      <result column="place_attach_charge" property="placeAttachCharge" jdbcType="DECIMAL" />
    </association>
  </resultMap>
  <sql id="Base_Column_List" >
    pr.record_id, pr.user_id, pr.place_id, pr.order_date, pr.order_start_time, pr.order_end_time, pr.record_status,pr.total_hour,pr.average_charge,pr.attach_charge,pr.total_charge,
    pr.update_time, pr.create_time,
    p.place_id, p.community_id, p.place_name, p.place_traditional_name, p.place_english_name, p.place_status,
    p.place_start_time, p.place_end_time, p.place_need_order, p.place_upper_limit, p.place_advance_order_day,
    p.place_farthest_order_day,p.place_icon_type, p.place_introduction, p.place_traditional_introduction, p.place_english_introduction, p.place_charge, p.place_attach_charge
  </sql>
  <sql id="Other_Column_List" >
    pr.record_id, pr.user_id, pr.place_id, pr.order_date, pr.order_start_time, pr.order_end_time, pr.record_status,pr.total_hour,pr.average_charge,pr.attach_charge,pr.total_charge,
    pr.update_time, pr.create_time,
    p.place_id, p.community_id, p.place_name, p.place_traditional_name, p.place_english_name, p.place_status,
    p.place_start_time, p.place_end_time, p.place_need_order, p.place_upper_limit, p.place_advance_order_day,
    p.place_farthest_order_day,p.place_icon_type, p.place_introduction, p.place_traditional_introduction, p.place_english_introduction, p.place_charge, p.place_attach_charge
  </sql>
  <select id="list" resultMap="BaseResultMap" parameterType="com.simon.dal.model.PlaceRecord" >
  	select
  	<include refid="Base_Column_List" />
  	from place_record pr inner join place p on pr.place_id=p.place_id
  	<where>
  		<if test="userId != null">
          pr.user_Id = #{userId,jdbcType=VARCHAR}
  		</if>
  	</where>
    order by pr.create_time desc
  </select>

  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="com.simon.dal.vo.BaseQueryParam" >
  	select
  	<include refid="Base_Column_List" />
  	from place_record pr inner join place p on pr.place_id=p.place_id
    inner join community c on p.community_id=c.community_id
  	<where>
      <if test="keyword != null and keyword!=''" >
        CONCAT(IFNULL(c.community_name,'')) LIKE CONCAT('%', #{keyword}, '%')
      </if>
      <if test="communityId != null">
        pr.community_id = #{communityId,jdbcType=VARCHAR}
      </if>
      <if test="communityNo != null">
        c.community_no = #{communityNo,jdbcType=VARCHAR}
      </if>
      <if test="orderDate != null">
        pr.order_date = #{orderDate,jdbcType=DATE}
      </if>
  	</where>
    order by pr.create_time desc
  </select>

  <select id="findPlaceTime" parameterType="com.simon.dal.model.PlaceRecord" resultType="int">
	SELECT 
		COUNT(*)	
	FROM 
	  	place_record
	WHERE
	  	order_date = #{orderDate,jdbcType=DATE} AND place_id=#{placeId,jdbcType=VARCHAR}
	AND
    (
    (#{orderStartTime, jdbcType=TIME}&lt;order_end_time AND #{orderStartTime, jdbcType=TIME}>=order_start_time AND #{orderEndTime, jdbcType=TIME} >=order_end_time)
    OR (#{orderEndTime, jdbcType=TIME}&lt;order_end_time AND #{orderEndTime, jdbcType=TIME}>order_start_time AND #{orderStartTime, jdbcType=TIME} &lt;order_start_time)
    OR (#{orderStartTime, jdbcType=TIME}>=order_start_time AND #{orderEndTime, jdbcType=TIME} &lt;order_end_time) OR (#{orderStartTime, jdbcType=TIME}&lt;=order_start_time AND #{orderEndTime, jdbcType=TIME} >order_end_time)
    OR (#{orderStartTime, jdbcType=TIME}=order_start_time AND #{orderEndTime, jdbcType=TIME} =order_end_time)
    )
    </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from place_record pr inner join place p on pr.place_id=p.place_id
    where pr.record_id = #{recordId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from place_record
    where record_id = #{recordId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.simon.dal.model.PlaceRecord" >
    insert into place_record (record_id, user_id, place_id, 
      order_date, order_start_time, order_end_time, 
      record_status,total_hour,average_charge,attach_charge,total_charge, update_time, create_time
      )
    values (#{recordId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{placeId,jdbcType=VARCHAR}, 
      #{orderDate,jdbcType=DATE}, #{orderStartTime,jdbcType=TIME}, #{orderEndTime,jdbcType=TIME}, 
      #{recordStatus,jdbcType=CHAR},#{totalHour,jdbcType=INTEGER},#{averageCharge,jdbcType=DECIMAL},#{attachCharge,jdbcType=DECIMAL},#{totalCharge,jdbcType=DECIMAL}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.simon.dal.model.PlaceRecord" >
    insert into place_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        record_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="placeId != null" >
        place_id,
      </if>
      <if test="orderDate != null" >
        order_date,
      </if>
      <if test="orderStartTime != null" >
        order_start_time,
      </if>
      <if test="orderEndTime != null" >
        order_end_time,
      </if>
      <if test="recordStatus != null" >
        record_status,
      </if>
      <if test="totalHour != null" >
        total_hour,
      </if>
      <if test="averageCharge != null" >
        average_charge,
      </if>
      <if test="attachCharge != null" >
        attach_charge,
      </if>
      <if test="totalCharge != null" >
        total_charge,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        #{recordId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="placeId != null" >
        #{placeId,jdbcType=VARCHAR},
      </if>
      <if test="orderDate != null" >
        #{orderDate,jdbcType=DATE},
      </if>
      <if test="orderStartTime != null" >
        #{orderStartTime,jdbcType=TIME},
      </if>
      <if test="orderEndTime != null" >
        #{orderEndTime,jdbcType=TIME},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=CHAR},
      </if>
      <if test="totalHour != null" >
        #{totalHour,jdbcType=INTEGER},
      </if>
      <if test="averageCharge != null" >
        #{averageCharge,jdbcType=DECIMAL},
      </if>
      <if test="attachCharge != null" >
        #{attachCharge,jdbcType=DECIMAL},
      </if>
      <if test="totalCharge != null" >
        #{totalCharge,jdbcType=DECIMAL},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.dal.model.PlaceRecord" >
    update place_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="placeId != null" >
        place_id = #{placeId,jdbcType=VARCHAR},
      </if>
      <if test="orderDate != null" >
        order_date = #{orderDate,jdbcType=DATE},
      </if>
      <if test="orderStartTime != null" >
        order_start_time = #{orderStartTime,jdbcType=TIME},
      </if>
      <if test="orderEndTime != null" >
        order_end_time = #{orderEndTime,jdbcType=TIME},
      </if>
      <if test="recordStatus != null" >
        record_status = #{recordStatus,jdbcType=CHAR},
      </if>
      <if test="totalHour != null" >
        total_hour = #{totalHour,jdbcType=INTEGER},
      </if>
      <if test="averageCharge != null" >
        average_charge = #{averageCharge,jdbcType=DECIMAL},
      </if>
      <if test="attachCharge != null" >
        attach_charge = #{attachCharge,jdbcType=DECIMAL},
      </if>
      <if test="totalCharge != null" >
        total_charge = #{totalCharge,jdbcType=DECIMAL},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where record_id = #{recordId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simon.dal.model.PlaceRecord" >
    update place_record
    set user_id = #{userId,jdbcType=VARCHAR},
      place_id = #{placeId,jdbcType=VARCHAR},
      order_date = #{orderDate,jdbcType=DATE},
      order_start_time = #{orderStartTime,jdbcType=TIME},
      order_end_time = #{orderEndTime,jdbcType=TIME},
      record_status = #{recordStatus,jdbcType=CHAR},
      total_hour = #{totalHour,jdbcType=INTEGER},
      average_charge = #{averageCharge,jdbcType=DECIMAL},
      attach_charge = #{attachCharge,jdbcType=DECIMAL},
      total_charge = #{totalCharge,jdbcType=DECIMAL},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where record_id = #{recordId,jdbcType=VARCHAR}
  </update>
</mapper>