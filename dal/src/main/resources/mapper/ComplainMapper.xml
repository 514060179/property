<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simon.dal.dao.ComplainMapper" >
  <resultMap id="BaseResultMap" type="com.simon.dal.model.Complain" >
    <id column="complain_id" property="complainId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="complain_position" property="complainPosition" jdbcType="VARCHAR" />
    <result column="complain_specific_position" property="complainSpecificPosition" jdbcType="VARCHAR" />
    <result column="complain_type" property="complainType" jdbcType="VARCHAR" />
    <result column="complain_class_type" property="complainClassType" jdbcType="VARCHAR" />
    <result column="complain_liaisons_name" property="complainLiaisonsName" jdbcType="VARCHAR" />
    <result column="complain_liaisons_sex" property="complainLiaisonsSex" jdbcType="CHAR" />
    <result column="complain_liaisons_email" property="complainLiaisonsEmail" jdbcType="VARCHAR" />
    <result column="complain_status" property="complainStatus" jdbcType="CHAR" />
    <result column="complain_finish_time" property="complainFinishTime" jdbcType="TIMESTAMP" />
    <result column="complain_handler" property="complainHandler" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="complain_describe" property="complainDescribe" jdbcType="LONGVARCHAR" />
    <result column="complain_voice" property="complainVoice" jdbcType="LONGVARBINARY" />
    
    <collection property="images" ofType="com.simon.dal.model.Images" >
    	<id column="image_id" property="imageId" jdbcType="VARCHAR"/>
    	<result column="object_id" property="objectId" jdbcType="VARCHAR"/>
    	<result column="image_url" property="imageUrl" jdbcType="VARCHAR"/>
    	<result column="image_thumbnail" property="imageThumbnail" jdbcType="VARCHAR"/>
    	<result column="image_type" property="imageType" jdbcType="INTEGER"/>
    	<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    	<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    </collection>
  </resultMap>

  <sql id="Base_Column_List" >
    img.image_id, img.image_url, img.image_thumbnail, img.object_id, img.image_type, img.create_time, img.update_time,
    c.complain_id, c.user_id, c.complain_position, c.complain_specific_position, c.complain_type,
    c.complain_class_type, c.complain_liaisons_name, c.complain_liaisons_sex,
    c.complain_liaisons_email, c.complain_status, c.complain_finish_time, c.complain_handler,c.complain_describe, c.complain_voice,
    c.create_time, c.update_time
  </sql>
  <select id="list" resultMap="BaseResultMap" parameterType="com.simon.dal.vo.BaseClaims">
  	select 
    <include refid="Base_Column_List" />
    from complain c
    left join images img on c.complain_id = img.object_id  and img.object_id=0
    <where>
      <if test="keyword!=null and keyword!=''">
        CONCAT(IFNULL(complain_position,''),IFNULL(complain_status,''),IFNULL(complain_handler,'')) LIKE CONCAT('%', #{keyword}, '%')
      </if>
      <if test="userId != null">
      	AND c.user_id = #{userId,jdbcType=VARCHAR}
      </if>
      <if test="communityId != null">
      	AND u.community_id = #{communityId, jdbcType=VARCHAR}
      </if>
    </where>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from complain c
    left join images img on c.complain_id = img.object_id  and img.object_id=0
    where complain_id = #{complainId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from complain
    where complain_id = #{complainId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.simon.dal.model.Complain" >
    insert into complain (complain_id, user_id, complain_position, 
      complain_specific_position, complain_type, 
      complain_class_type, complain_liaisons_name, 
      complain_liaisons_sex, complain_liaisons_email, 
      complain_status, complain_finish_time, complain_handler, 
      create_time, update_time, complain_describe, 
      complain_voice)
    values (#{complainId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{complainPosition,jdbcType=VARCHAR}, 
      #{complainSpecificPosition,jdbcType=VARCHAR}, #{complainType,jdbcType=VARCHAR}, 
      #{complainClassType,jdbcType=VARCHAR}, #{complainLiaisonsName,jdbcType=VARCHAR}, 
      #{complainLiaisonsSex,jdbcType=CHAR}, #{complainLiaisonsEmail,jdbcType=VARCHAR}, 
      #{complainStatus,jdbcType=CHAR}, #{complainFinishTime,jdbcType=TIMESTAMP}, #{complainHandler,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{complainDescribe,jdbcType=LONGVARCHAR}, 
      #{complainVoice,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.simon.dal.model.Complain" useGeneratedKeys="true">
    insert into complain
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="complainId != null" >
        complain_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="complainPosition != null" >
        complain_position,
      </if>
      <if test="complainSpecificPosition != null" >
        complain_specific_position,
      </if>
      <if test="complainType != null" >
        complain_type,
      </if>
      <if test="complainClassType != null" >
        complain_class_type,
      </if>
      <if test="complainLiaisonsName != null" >
        complain_liaisons_name,
      </if>
      <if test="complainLiaisonsSex != null" >
        complain_liaisons_sex,
      </if>
      <if test="complainLiaisonsEmail != null" >
        complain_liaisons_email,
      </if>
      <if test="complainStatus != null" >
        complain_status,
      </if>
      <if test="complainFinishTime != null" >
        complain_finish_time,
      </if>
      <if test="complainHandler != null" >
        complain_handler,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="complainDescribe != null" >
        complain_describe,
      </if>
      <if test="complainVoice != null" >
        complain_voice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="complainId != null" >
        #{complainId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="complainPosition != null" >
        #{complainPosition,jdbcType=VARCHAR},
      </if>
      <if test="complainSpecificPosition != null" >
        #{complainSpecificPosition,jdbcType=VARCHAR},
      </if>
      <if test="complainType != null" >
        #{complainType,jdbcType=VARCHAR},
      </if>
      <if test="complainClassType != null" >
        #{complainClassType,jdbcType=VARCHAR},
      </if>
      <if test="complainLiaisonsName != null" >
        #{complainLiaisonsName,jdbcType=VARCHAR},
      </if>
      <if test="complainLiaisonsSex != null" >
        #{complainLiaisonsSex,jdbcType=CHAR},
      </if>
      <if test="complainLiaisonsEmail != null" >
        #{complainLiaisonsEmail,jdbcType=VARCHAR},
      </if>
      <if test="complainStatus != null" >
        #{complainStatus,jdbcType=CHAR},
      </if>
      <if test="complainFinishTime != null" >
        #{complainFinishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="complainHandler != null" >
        #{complainHandler,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="complainDescribe != null" >
        #{complainDescribe,jdbcType=LONGVARCHAR},
      </if>
      <if test="complainVoice != null" >
        #{complainVoice,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.dal.model.Complain" >
    update complain
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="complainPosition != null" >
        complain_position = #{complainPosition,jdbcType=VARCHAR},
      </if>
      <if test="complainSpecificPosition != null" >
        complain_specific_position = #{complainSpecificPosition,jdbcType=VARCHAR},
      </if>
      <if test="complainType != null" >
        complain_type = #{complainType,jdbcType=VARCHAR},
      </if>
      <if test="complainClassType != null" >
        complain_class_type = #{complainClassType,jdbcType=VARCHAR},
      </if>
      <if test="complainLiaisonsName != null" >
        complain_liaisons_name = #{complainLiaisonsName,jdbcType=VARCHAR},
      </if>
      <if test="complainLiaisonsSex != null" >
        complain_liaisons_sex = #{complainLiaisonsSex,jdbcType=CHAR},
      </if>
      <if test="complainLiaisonsEmail != null" >
        complain_liaisons_email = #{complainLiaisonsEmail,jdbcType=VARCHAR},
      </if>
      <if test="complainStatus != null" >
        complain_status = #{complainStatus,jdbcType=CHAR},
      </if>
      <if test="complainFinishTime != null" >
        complain_finish_time = #{complainFinishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="complainHandler != null" >
        complain_handler = #{complainHandler,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="complainDescribe != null" >
        complain_describe = #{complainDescribe,jdbcType=LONGVARCHAR},
      </if>
      <if test="complainVoice != null" >
        complain_voice = #{complainVoice,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where complain_id = #{complainId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.simon.dal.model.Complain" >
    update complain
    set user_id = #{userId,jdbcType=VARCHAR},
      complain_position = #{complainPosition,jdbcType=VARCHAR},
      complain_specific_position = #{complainSpecificPosition,jdbcType=VARCHAR},
      complain_type = #{complainType,jdbcType=VARCHAR},
      complain_class_type = #{complainClassType,jdbcType=VARCHAR},
      complain_liaisons_name = #{complainLiaisonsName,jdbcType=VARCHAR},
      complain_liaisons_sex = #{complainLiaisonsSex,jdbcType=CHAR},
      complain_liaisons_email = #{complainLiaisonsEmail,jdbcType=VARCHAR},
      complain_status = #{complainStatus,jdbcType=CHAR},
      complain_finish_time = #{complainFinishTime,jdbcType=TIMESTAMP},
      complain_handler = #{complainHandler,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      complain_describe = #{complainDescribe,jdbcType=LONGVARCHAR},
      complain_voice = #{complainVoice,jdbcType=LONGVARBINARY}
    where complain_id = #{complainId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simon.dal.model.Complain" >
    update complain
    set user_id = #{userId,jdbcType=VARCHAR},
      complain_position = #{complainPosition,jdbcType=VARCHAR},
      complain_specific_position = #{complainSpecificPosition,jdbcType=VARCHAR},
      complain_type = #{complainType,jdbcType=VARCHAR},
      complain_class_type = #{complainClassType,jdbcType=VARCHAR},
      complain_liaisons_name = #{complainLiaisonsName,jdbcType=VARCHAR},
      complain_liaisons_sex = #{complainLiaisonsSex,jdbcType=CHAR},
      complain_liaisons_email = #{complainLiaisonsEmail,jdbcType=VARCHAR},
      complain_status = #{complainStatus,jdbcType=CHAR},
      complain_finish_time = #{complainFinishTime,jdbcType=TIMESTAMP},
      complain_handler = #{complainHandler,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where complain_id = #{complainId,jdbcType=VARCHAR}
  </update>
</mapper>