<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simon.backstage.dao.AssetStorageRecordMapper" >
  <resultMap id="BaseResultMap" type="com.simon.backstage.domain.model.AssetStorageRecord" >
    <id column="storage_record_id" property="storageRecordId" jdbcType="VARCHAR" />
    <result column="asset_id" property="assetId" jdbcType="VARCHAR" />
    <result column="storage_type" property="storageType" jdbcType="INTEGER" />
    <result column="storage_amount" property="storageAmount" jdbcType="INTEGER" />
    <result column="storage_unitprice" property="storageUnitprice" jdbcType="DECIMAL" />
    <result column="storage_remark" property="storageRemark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    storage_record_id, asset_id, storage_type, storage_amount,storage_unitprice, storage_remark, create_time,
    update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from asset_storage_record
    where storage_record_id = #{storageRecordId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from asset_storage_record
    where storage_record_id = #{storageRecordId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.simon.backstage.domain.model.AssetStorageRecord" >
    insert into asset_storage_record (storage_record_id, asset_id, storage_type, 
      storage_amount,storage_unitprice, storage_remark, create_time,
      update_time)
    values (#{storageRecordId,jdbcType=VARCHAR}, #{assetId,jdbcType=VARCHAR}, #{storageType,jdbcType=INTEGER}, 
      #{storageAmount,jdbcType=INTEGER},#{storageUnitprice}, #{storageRemark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.simon.backstage.domain.model.AssetStorageRecord" >
    insert into asset_storage_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="storageRecordId != null" >
        storage_record_id,
      </if>
      <if test="assetId != null" >
        asset_id,
      </if>
      <if test="storageType != null" >
        storage_type,
      </if>
      <if test="storageAmount != null" >
        storage_amount,
      </if>
      <if test="storageUnitprice != null" >
        storage_unitprice,
      </if>
      <if test="storageRemark != null" >
        storage_remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="storageRecordId != null" >
        #{storageRecordId,jdbcType=VARCHAR},
      </if>
      <if test="assetId != null" >
        #{assetId,jdbcType=VARCHAR},
      </if>
      <if test="storageType != null" >
        #{storageType,jdbcType=INTEGER},
      </if>
      <if test="storageAmount != null" >
        #{storageAmount,jdbcType=INTEGER},
      </if>
      <if test="storageUnitprice != null" >
        #{storageUnitprice},
      </if>
      <if test="storageRemark != null" >
        #{storageRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.backstage.domain.model.AssetStorageRecord" >
    update asset_storage_record
    <set >
      <if test="assetId != null" >
        asset_id = #{assetId,jdbcType=VARCHAR},
      </if>
      <if test="storageType != null" >
        storage_type = #{storageType,jdbcType=INTEGER},
      </if>
      <if test="storageAmount != null" >
        storage_amount = #{storageAmount,jdbcType=INTEGER},
      </if>
      <if test="storageUnitprice != null" >
        storage_unitprice = #{storageUnitprice},
      </if>
      <if test="storageRemark != null" >
        storage_remark = #{storageRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where storage_record_id = #{storageRecordId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simon.backstage.domain.model.AssetStorageRecord" >
    update asset_storage_record
    set asset_id = #{assetId,jdbcType=VARCHAR},
      storage_type = #{storageType,jdbcType=INTEGER},
      storage_amount = #{storageAmount,jdbcType=INTEGER},
      storage_unitprice = #{storageUnitprice},
      storage_remark = #{storageRemark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where storage_record_id = #{storageRecordId,jdbcType=VARCHAR}
  </update>
</mapper>