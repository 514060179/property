<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simon.backstage.dao.EventMapper" >
  <resultMap id="BaseResultMap" type="com.simon.backstage.domain.model.Event" >
    <id column="event_id" property="eventId" jdbcType="VARCHAR" />
    <result column="community_id" property="communityId" jdbcType="VARCHAR" />
    <result column="asset_no" property="assetNo" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="complain_position" property="complainPosition" jdbcType="VARCHAR" />
    <result column="complain_specific_position" property="complainSpecificPosition" jdbcType="VARCHAR" />
    <result column="complain_type" property="complainType" jdbcType="VARCHAR" />
    <result column="complain_class_type" property="complainClassType" jdbcType="VARCHAR" />
    <result column="complain_voice" property="complainVoice" jdbcType="VARCHAR" />
    <result column="complain_reply" property="complainReply" jdbcType="VARCHAR" />
    <result column="event_status" property="eventStatus" jdbcType="INTEGER" />
    <result column="event_channel" property="eventChannel" jdbcType="INTEGER" />
    <result column="event_remark" property="eventRemark" jdbcType="VARCHAR" />
    <result column="event_date" property="eventDate" jdbcType="DATE" />
    <result column="event_type" property="eventType" jdbcType="INTEGER" />
    <result column="event_remind_cycle" property="eventRemindCycle" jdbcType="INTEGER" />
    <result column="event_finish_date" property="eventFinishDate" jdbcType="DATE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="event_content" property="eventContent" jdbcType="LONGVARCHAR" />
    <result column="event_cause" property="eventCause" jdbcType="LONGVARCHAR" />
    <result column="event_solve" property="eventSolve" jdbcType="LONGVARCHAR" />
    <association property="community" javaType="com.simon.backstage.domain.vo.Community">
      <id column="community_id" property="communityId" jdbcType="VARCHAR" />
      <result column="community_no" property="communityNo" jdbcType="VARCHAR" />
      <result column="community_name" property="communityName" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  <sql id="Base_Column_List" >
    e.event_id, e.community_id,
    e.asset_no,e.user_id,e.complain_position,e.complain_specific_position,
    e.complain_type,e.complain_class_type,e.complain_voice,e.complain_reply,
    e.event_status,e.event_channel, e.event_remark, e.event_date, e.event_type, e.event_remind_cycle, e.event_finish_date,
    e.create_time, e.update_time,e.event_content, e.event_cause, e.event_solve,
    c.community_id,c.community_no,c.community_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from event e inner join community c on e.community_id=c.community_id
    where e.event_id = #{eventId,jdbcType=VARCHAR}
  </select>
  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="com.simon.backstage.domain.vo.EventQueryParam" >
    select
    <include refid="Base_Column_List" />
    from event e left join community c on e.community_id=c.community_id
    <where>
      <if test="keyword!=null and keyword!=''">
        CONCAT(IFNULL(e.event_remark,''),IFNULL(e.event_channel,''),IFNULL(e.complain_reply,''),IFNULL(e.complain_class_type,''),IFNULL(e.event_content,''),IFNULL(e.complain_position,''),IFNULL(e.complain_specific_position,''),IFNULL(e.complain_type,'')) LIKE CONCAT('%', #{keyword}, '%')
      </if>
      <if test="communityId != null">
      	AND e.community_id = #{communityId,jdbcType=VARCHAR}
      </if>
      <if test="assetNo != null">
      	AND e.asset_no = #{assetNo,jdbcType=VARCHAR}
      </if>
      <if test="eventType != null">
      	AND e.event_type = #{eventType,jdbcType=INTEGER}
      </if>
      <if test="eventRemindCycle != null">
      	AND e.event_remind_cycle = #{eventRemindCycle,jdbcType=INTEGER}
      </if>
    </where>
    order by e.create_time desc
  </select>
  <select id="selectRemindEvent" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from event e  join community c on e.community_id=c.community_id
    where e.event_type=2
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from event
    where event_id = #{eventId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.simon.backstage.domain.model.Event" >
    insert into event (event_id, community_id,
      asset_no,user_id,complain_position,complain_specific_position,
      complain_type,complain_class_type,complain_voice,complain_reply,
      event_status,event_channel,
      event_remark, event_date, event_type, event_remind_cycle,
      event_finish_date, create_time, update_time, 
      event_content, event_cause, event_solve
      )
    values (#{eventId,jdbcType=VARCHAR}, #{communityId,jdbcType=VARCHAR},
      #{assetNo,jdbcType=VARCHAR},#{userId,jdbcType=VARCHAR},#{complainPosition,jdbcType=VARCHAR},
      #{complainSpecificPosition,jdbcType=VARCHAR},#{complainType,jdbcType=VARCHAR},#{complainClassType,jdbcType=VARCHAR},
      #{complainVoice,jdbcType=VARCHAR},#{complainReply,jdbcType=VARCHAR},#{eventStatus,jdbcType=INTEGER},#{eventChannel,jdbcType=INTEGER},
      #{eventRemark,jdbcType=VARCHAR}, #{eventDate,jdbcType=DATE}, #{eventType,jdbcType=INTEGER}, #{eventRemindCycle,jdbcType=INTEGER},
      #{eventFinishDate,jdbcType=DATE}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{eventContent,jdbcType=LONGVARCHAR}, #{eventCause,jdbcType=LONGVARCHAR}, #{eventSolve,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.simon.backstage.domain.model.Event" >
    insert into event
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="eventId != null" >
        event_id,
      </if>
      <if test="communityId != null" >
        community_id,
      </if>
      <if test="assetNo != null" >
        asset_no,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="complainPosition != null" >
        complain_position,
      </if>
      <if test="complainSpecificPosition != null" >
        complain_specific_position,
      </if>
      <if test="complainType != null" >
        complain_type,
      </if>
      <if test="complainClassType != null" >
        complain_class_type,
      </if>
      <if test="complainVoice != null" >
        complain_voice,
      </if>
      <if test="complainReply != null" >
        complain_reply,
      </if>
      <if test="eventStatus != null" >
        event_status,
      </if>
      <if test="eventChannel != null" >
        event_channel,
      </if>
      <if test="eventRemark != null" >
        event_remark,
      </if>
      <if test="eventDate != null" >
        event_date,
      </if>
      <if test="eventType != null" >
        event_type,
      </if>
      <if test="eventRemindCycle != null" >
        event_remind_cycle,
      </if>
      <if test="eventFinishDate != null" >
        event_finish_date,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="eventContent != null" >
        event_content,
      </if>
      <if test="eventCause != null" >
        event_cause,
      </if>
      <if test="eventSolve != null" >
        event_solve,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="eventId != null" >
        #{eventId,jdbcType=VARCHAR},
      </if>
      <if test="communityId != null" >
        #{communityId,jdbcType=VARCHAR},
      </if>
      <if test="assetNo != null" >
        #{assetNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="complainPosition != null" >
        #{complainPosition,jdbcType=VARCHAR},
      </if>
      <if test="complainSpecificPosition != null" >
        #{complainSpecificPosition,jdbcType=VARCHAR},
      </if>
      <if test="complainType != null" >
        #{complainType,jdbcType=VARCHAR},
      </if>
      <if test="complainClassType != null" >
        #{complainClassType,jdbcType=VARCHAR},
      </if>
      <if test="complainVoice != null" >
        #{complainVoice,jdbcType=VARCHAR},
      </if>
      <if test="complainReply != null" >
        #{complainReply,jdbcType=VARCHAR},
      </if>
      <if test="eventStatus != null" >
        #{eventStatus,jdbcType=INTEGER},
      </if>
      <if test="eventChannel != null" >
        #{eventChannel,jdbcType=INTEGER},
      </if>
      <if test="eventRemark != null" >
        #{eventRemark,jdbcType=VARCHAR},
      </if>
      <if test="eventDate != null" >
        #{eventDate,jdbcType=DATE},
      </if>
      <if test="eventType != null" >
        #{eventType,jdbcType=INTEGER},
      </if>
      <if test="eventRemindCycle != null" >
        #{eventRemindCycle,jdbcType=INTEGER},
      </if>
      <if test="eventFinishDate != null" >
        #{eventFinishDate,jdbcType=DATE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="eventContent != null" >
        #{eventContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="eventCause != null" >
        #{eventCause,jdbcType=LONGVARCHAR},
      </if>
      <if test="eventSolve != null" >
        #{eventSolve,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateSelective" parameterType="com.simon.backstage.domain.vo.EventUpdParam" >
    update event
    <set >
      <if test="eventStatus != null" >
        event_status = #{eventStatus,jdbcType=INTEGER},
      </if>
      <if test="eventChannel != null" >
        event_channel = #{eventChannel,jdbcType=INTEGER},
      </if>
      <if test="assetNo != null" >
        asset_no = #{assetNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="complainPosition != null" >
        complain_position = #{complainPosition,jdbcType=VARCHAR},
      </if>
      <if test="complainSpecificPosition != null" >
        complain_specific_position = #{complainSpecificPosition,jdbcType=VARCHAR},
      </if>
      <if test="complainType != null" >
        complain_type = #{complainType,jdbcType=VARCHAR},
      </if>
      <if test="complainClassType != null" >
        complain_class_type = #{complainClassType,jdbcType=VARCHAR},
      </if>
      <if test="complainVoice != null" >
        complain_voice = #{complainVoice,jdbcType=VARCHAR},
      </if>
      <if test="complainReply != null" >
        complain_reply = #{complainReply,jdbcType=VARCHAR},
      </if>
      <if test="eventRemark != null" >
        event_remark = #{eventRemark,jdbcType=VARCHAR},
      </if>
      <if test="eventDate != null" >
        event_date = #{eventDate,jdbcType=DATE},
      </if>
      <if test="eventType != null" >
        event_type = #{eventType,jdbcType=INTEGER},
      </if>
      <if test="eventRemindCycle != null" >
        event_remind_cycle = #{eventRemindCycle,jdbcType=INTEGER},
      </if>
      <if test="eventFinishDate != null" >
        event_finish_date = #{eventFinishDate,jdbcType=DATE},
      </if>
      <if test="eventContent != null" >
        event_content = #{eventContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="eventCause != null" >
        event_cause = #{eventCause,jdbcType=LONGVARCHAR},
      </if>
      <if test="eventSolve != null" >
        event_solve = #{eventSolve,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where event_id = #{eventId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.backstage.domain.model.Event" >
    update event
    <set >
      <if test="communityId != null" >
        community_id = #{communityId,jdbcType=VARCHAR},
      </if>
      <if test="assetNo != null" >
        asset_no = #{assetNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="complainPosition != null" >
        complain_position = #{complainPosition,jdbcType=VARCHAR},
      </if>
      <if test="complainSpecificPosition != null" >
        complain_specific_position = #{complainSpecificPosition,jdbcType=VARCHAR},
      </if>
      <if test="complainType != null" >
        complain_type = #{complainType,jdbcType=VARCHAR},
      </if>
      <if test="complainClassType != null" >
        complain_class_type = #{complainClassType,jdbcType=VARCHAR},
      </if>
      <if test="complainVoice != null" >
        complain_voice = #{complainVoice,jdbcType=VARCHAR},
      </if>
      <if test="complainReply != null" >
        complain_reply = #{complainReply,jdbcType=VARCHAR},
      </if>
      <if test="eventStatus != null" >
        event_status = #{eventStatus,jdbcType=INTEGER},
      </if>
      <if test="eventChannel != null" >
        event_channel = #{eventChannel,jdbcType=INTEGER},
      </if>
      <if test="eventRemark != null" >
        event_remark = #{eventRemark,jdbcType=VARCHAR},
      </if>
      <if test="eventDate != null" >
        event_date = #{eventDate,jdbcType=DATE},
      </if>
      <if test="eventType != null" >
        event_type = #{eventType,jdbcType=INTEGER},
      </if>
      <if test="eventRemindCycle != null" >
        event_remind_cycle = #{eventRemindCycle,jdbcType=INTEGER},
      </if>
      <if test="eventFinishDate != null" >
        event_finish_date = #{eventFinishDate,jdbcType=DATE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="eventContent != null" >
        event_content = #{eventContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="eventCause != null" >
        event_cause = #{eventCause,jdbcType=LONGVARCHAR},
      </if>
      <if test="eventSolve != null" >
        event_solve = #{eventSolve,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where event_id = #{eventId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.simon.backstage.domain.model.Event" >
    update event
    set
      community_id = #{communityId,jdbcType=VARCHAR},
      asset_no = #{assetNo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      complain_position = #{complainPosition,jdbcType=VARCHAR},
      complain_specific_position = #{complainSpecificPosition,jdbcType=VARCHAR},
      complain_type = #{complainType,jdbcType=VARCHAR},
      complain_class_type = #{complainClassType,jdbcType=VARCHAR},
      complain_voice = #{complainVoice,jdbcType=VARCHAR},
      complain_reply = #{complainReply,jdbcType=VARCHAR},
      event_status = #{eventStatus,jdbcType=INTEGER},
      event_channel = #{eventChannel,jdbcType=INTEGER},
      event_remark = #{eventRemark,jdbcType=VARCHAR},
      event_date = #{eventDate,jdbcType=DATE},
      event_type = #{eventType,jdbcType=INTEGER},
      event_remind_cycle = #{eventRemindCycle,jdbcType=INTEGER},
      event_finish_date = #{eventFinishDate,jdbcType=DATE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      event_content = #{eventContent,jdbcType=LONGVARCHAR},
      event_cause = #{eventCause,jdbcType=LONGVARCHAR},
      event_solve = #{eventSolve,jdbcType=LONGVARCHAR}
    where event_id = #{eventId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simon.backstage.domain.model.Event" >
    update event
    set
      community_id = #{communityId,jdbcType=VARCHAR},
      asset_no = #{assetNo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      complain_position = #{complainPosition,jdbcType=VARCHAR},
      complain_specific_position = #{complainSpecificPosition,jdbcType=VARCHAR},
      complain_type = #{complainType,jdbcType=VARCHAR},
      complain_class_type = #{complainClassType,jdbcType=VARCHAR},
      complain_voice = #{complainVoice,jdbcType=VARCHAR},
      complain_reply = #{complainReply,jdbcType=VARCHAR},
      event_status = #{eventStatus,jdbcType=INTEGER},
      event_channel = #{eventChannel,jdbcType=INTEGER},
      event_remark = #{eventRemark,jdbcType=VARCHAR},
      event_date = #{eventDate,jdbcType=DATE},
      event_type = #{eventType,jdbcType=INTEGER},
      event_remind_cycle = #{eventRemindCycle,jdbcType=INTEGER},
      event_finish_date = #{eventFinishDate,jdbcType=DATE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where event_id = #{eventId,jdbcType=VARCHAR}
  </update>
</mapper>