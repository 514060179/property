<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simon.backstage.dao.BuildingMapper" >
  <resultMap id="BaseResultMap" type="com.simon.backstage.domain.model.Building" >
    <id column="building_id" property="buildingId" jdbcType="VARCHAR" />
    <result column="community_id" property="communityId" jdbcType="VARCHAR" />
    <result column="building_name" property="buildingName" jdbcType="VARCHAR" />
    <result column="building_no" property="buildingNo" jdbcType="VARCHAR" />
    <result column="full_address" property="fullAddress" jdbcType="VARCHAR" />
    <result column="building_struct" property="buildingStruct" jdbcType="VARCHAR" />
    <result column="building_direction" property="buildingDirection" jdbcType="VARCHAR" />
    <result column="floor_up_num" property="floorUpNum" jdbcType="INTEGER" />
    <result column="floor_low_num" property="floorLowNum" jdbcType="INTEGER" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    building_id, community_id, building_name, building_no, full_address, building_struct, 
    building_direction, floor_up_num, floor_low_num, deleted, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from building
    where building_id = #{buildingId,jdbcType=VARCHAR}
  </select>

  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="com.simon.dal.vo.BaseClaims" >
    select
    <include refid="Base_Column_List" />
    from building
    <where>
      <if test="keyword!=null and keyword!=''">
        CONCAT(IFNULL(building_name,''),IFNULL(building_no,''),IFNULL(full_address,'')) LIKE CONCAT('%', #{keyword}, '%')
      </if>
      <if test="communityId != null">
      	AND community_id = #{communityId,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from building
    where building_id = #{buildingId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.simon.backstage.domain.model.Building" >
    insert into building (building_id, community_id, building_name, 
      building_no, full_address, building_struct, 
      building_direction, floor_up_num, floor_low_num, 
      deleted, create_time, update_time
      )
    values (#{buildingId,jdbcType=VARCHAR}, #{communityId,jdbcType=VARCHAR}, #{buildingName,jdbcType=VARCHAR}, 
      #{buildingNo,jdbcType=VARCHAR}, #{fullAddress,jdbcType=VARCHAR}, #{buildingStruct,jdbcType=VARCHAR}, 
      #{buildingDirection,jdbcType=VARCHAR}, #{floorUpNum,jdbcType=INTEGER}, #{floorLowNum,jdbcType=INTEGER}, 
      #{deleted,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.simon.backstage.domain.model.Building" >
    insert into building
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="buildingId != null" >
        building_id,
      </if>
      <if test="communityId != null" >
        community_id,
      </if>
      <if test="buildingName != null" >
        building_name,
      </if>
      <if test="buildingNo != null" >
        building_no,
      </if>
      <if test="fullAddress != null" >
        full_address,
      </if>
      <if test="buildingStruct != null" >
        building_struct,
      </if>
      <if test="buildingDirection != null" >
        building_direction,
      </if>
      <if test="floorUpNum != null" >
        floor_up_num,
      </if>
      <if test="floorLowNum != null" >
        floor_low_num,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="buildingId != null" >
        #{buildingId,jdbcType=VARCHAR},
      </if>
      <if test="communityId != null" >
        #{communityId,jdbcType=VARCHAR},
      </if>
      <if test="buildingName != null" >
        #{buildingName,jdbcType=VARCHAR},
      </if>
      <if test="buildingNo != null" >
        #{buildingNo,jdbcType=VARCHAR},
      </if>
      <if test="fullAddress != null" >
        #{fullAddress,jdbcType=VARCHAR},
      </if>
      <if test="buildingStruct != null" >
        #{buildingStruct,jdbcType=VARCHAR},
      </if>
      <if test="buildingDirection != null" >
        #{buildingDirection,jdbcType=VARCHAR},
      </if>
      <if test="floorUpNum != null" >
        #{floorUpNum,jdbcType=INTEGER},
      </if>
      <if test="floorLowNum != null" >
        #{floorLowNum,jdbcType=INTEGER},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.backstage.domain.model.Building" >
    update building
    <set >
      <if test="communityId != null" >
        community_id = #{communityId,jdbcType=VARCHAR},
      </if>
      <if test="buildingName != null" >
        building_name = #{buildingName,jdbcType=VARCHAR},
      </if>
      <if test="buildingNo != null" >
        building_no = #{buildingNo,jdbcType=VARCHAR},
      </if>
      <if test="fullAddress != null" >
        full_address = #{fullAddress,jdbcType=VARCHAR},
      </if>
      <if test="buildingStruct != null" >
        building_struct = #{buildingStruct,jdbcType=VARCHAR},
      </if>
      <if test="buildingDirection != null" >
        building_direction = #{buildingDirection,jdbcType=VARCHAR},
      </if>
      <if test="floorUpNum != null" >
        floor_up_num = #{floorUpNum,jdbcType=INTEGER},
      </if>
      <if test="floorLowNum != null" >
        floor_low_num = #{floorLowNum,jdbcType=INTEGER},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where building_id = #{buildingId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simon.backstage.domain.model.Building" >
    update building
    set community_id = #{communityId,jdbcType=VARCHAR},
      building_name = #{buildingName,jdbcType=VARCHAR},
      building_no = #{buildingNo,jdbcType=VARCHAR},
      full_address = #{fullAddress,jdbcType=VARCHAR},
      building_struct = #{buildingStruct,jdbcType=VARCHAR},
      building_direction = #{buildingDirection,jdbcType=VARCHAR},
      floor_up_num = #{floorUpNum,jdbcType=INTEGER},
      floor_low_num = #{floorLowNum,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where building_id = #{buildingId,jdbcType=VARCHAR}
  </update>
</mapper>