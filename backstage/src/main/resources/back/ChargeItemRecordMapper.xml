<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simon.backstage.dao.ChargeItemRecordMapper" >
  <resultMap id="BaseResultMap" type="com.simon.backstage.domain.model.ChargeItemRecord" >
    <id column="record_id" property="recordId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="unit_item_id" property="unitItemId" jdbcType="VARCHAR" />
    <result column="record_item_name" property="recordItemName" jdbcType="VARCHAR" />
    <result column="record_date" property="recordDate" jdbcType="VARCHAR" />
    <result column="record_status" property="recordStatus" jdbcType="INTEGER" />
    <result column="record_time" property="recordTime" jdbcType="TIMESTAMP" />
    <result column="record_actual_amount" property="recordActualAmount" jdbcType="DECIMAL" />
    <result column="record_amount" property="recordAmount" jdbcType="DECIMAL" />
    <result column="record_late_fee" property="recordLateFee" jdbcType="DECIMAL" />
    <result column="record_late_date" property="recordLateDate" jdbcType="INTEGER" />
    <result column="record_remark" property="recordRemark" jdbcType="VARCHAR" />
    <result column="unit_type" property="unitType" jdbcType="INTEGER" />
    <result column="unit_no" property="unitNo" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <association property="community" javaType="com.simon.backstage.domain.vo.Community">
      <id column="community_id" property="communityId" jdbcType="VARCHAR" />
      <result column="community_no" property="communityNo" jdbcType="VARCHAR" />
      <result column="community_name" property="communityName" jdbcType="VARCHAR" />
    </association>
    <association property="chargeItem" javaType="com.simon.backstage.domain.model.ChargeItem">
      <id column="item_id" property="itemId" jdbcType="VARCHAR" />
      <result column="item_no" property="itemNo" jdbcType="VARCHAR" />
      <result column="community_id" property="communityId" jdbcType="VARCHAR" />
      <result column="item_name" property="itemName" jdbcType="VARCHAR" />
      <result column="billing_mode" property="billingMode" jdbcType="INTEGER" />
      <result column="alculation_method" property="alculationMethod" jdbcType="INTEGER" />
      <result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
      <result column="additional_cost" property="additionalCost" jdbcType="DECIMAL" />
      <result column="late_fee" property="lateFee" jdbcType="INTEGER" />
      <result column="late_date" property="lateDate" jdbcType="INTEGER" />
      <result column="formula" property="formula" jdbcType="VARCHAR" />
      <result column="describe" property="describe" jdbcType="VARCHAR" />
    </association>
    <association property="user" javaType="com.simon.dal.model.User">
      <id column="user_id" property="userId" jdbcType="VARCHAR" />
      <result column="name" property="name" jdbcType="VARCHAR" />
      <result column="english_name" property="englishName" jdbcType="VARCHAR" />
      <result column="sex" property="sex" jdbcType="INTEGER" />
    </association>
  </resultMap>
  <sql id="Base_Column_List" >
    record_id, user_id, unit_item_id,record_item_name, record_date, record_status, record_time, record_actual_amount,
    record_amount, record_late_fee, record_late_date, record_remark, create_time, update_time
  </sql>
  <sql id="With_Other_Column_List" >
    cir.record_id, cir.user_id, cir.unit_item_id,cir.record_item_name, cir.record_date, cir.record_status, cir.record_time, cir.record_actual_amount,
    cir.record_amount, cir.record_late_fee, cir.record_late_date, cir.record_remark, cir.create_time, cir.update_time,
    uu.user_id, uu.name, uu.english_name, uu.sex,u.unit_type,u.unit_no,
    ci.item_id, ci.item_no,ci.community_id, ci.item_name, ci.billing_mode, ci.alculation_method, ci.unit_price,ci.additional_cost, ci.late_fee,
    ci.late_date, ci.formula, ci.`describe`,
    c.community_id,c.community_no,c.community_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="With_Other_Column_List" />
    from charge_item_record cir
      inner join `user` uu on cir.user_id=uu.user_id
      inner join unit_charge_item uci on cir.unit_item_id=uci.unit_item_id
      inner join charge_item ci on uci.item_id=ci.item_id
      inner join unit u on uci.unit_id=u.unit_id
      inner join community c on u.community_id=c.community_id
    where cir.record_id = #{recordId,jdbcType=VARCHAR}
  </select>
  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="com.simon.dal.vo.BaseQueryParam" >
    select
    <include refid="With_Other_Column_List" />
    from charge_item_record cir
      inner join `user` uu on cir.user_id=uu.user_id
      inner join unit_charge_item uci on cir.unit_item_id=uci.unit_item_id
      inner join charge_item ci on uci.item_id=ci.item_id
      inner join unit u on uci.unit_id=u.unit_id
      inner join community c on u.community_id=c.community_id
    <where>
      <if test="keyword!=null and keyword!=''">
        CONCAT(IFNULL(ci.item_no,''),IFNULL(ci.item_name,''),IFNULL(uu.`name`,'')) LIKE CONCAT('%', #{keyword}, '%')
      </if>
      <if test="unitId!=null and unitId!=''">
        and uci.unit_id = #{unitId,jdbcType=VARCHAR}
      </if>
      <if test="unitNo!=null and unitNo!=''">
        and u.unit_no = #{unitNo,jdbcType=VARCHAR}
      </if>
      <if test="userName!=null and userName!=''">
        and uu.`name` = #{userName,jdbcType=VARCHAR}
      </if>
      <if test="recordStatus!=null">
        and cir.record_status = #{recordStatus,jdbcType=INTEGER}
      </if>
      <if test="communityId!=null and communityId!=''">
        and u.community_id = #{communityId,jdbcType=VARCHAR}
      </if>
      <if test="buildingId!=null and buildingId!=''">
        and u.building_id = #{buildingId,jdbcType=VARCHAR}
      </if>
    </where>
    order by uu.`name`
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from charge_item_record
    where record_id = #{recordId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.simon.backstage.domain.model.ChargeItemRecord" >
    insert into charge_item_record (record_id, user_id, unit_item_id, record_item_name,
      record_date, record_status, record_time, 
      record_actual_amount, record_amount, record_late_fee, 
      record_late_date, record_remark, create_time, 
      update_time)
    values (#{recordId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{unitItemId,jdbcType=VARCHAR}, #{recordItemName,jdbcType=VARCHAR},
      #{recordDate,jdbcType=VARCHAR}, #{recordStatus,jdbcType=INTEGER}, #{recordTime,jdbcType=TIMESTAMP}, 
      #{recordActualAmount,jdbcType=DECIMAL}, #{recordAmount,jdbcType=DECIMAL}, #{recordLateFee,jdbcType=DECIMAL}, 
      #{recordLateDate,jdbcType=INTEGER}, #{recordRemark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.simon.backstage.domain.model.ChargeItemRecord" >
    insert into charge_item_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        record_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="unitItemId != null" >
        unit_item_id,
      </if>
      <if test="recordItemName != null" >
        record_item_name,
      </if>
      <if test="recordDate != null" >
        record_date,
      </if>
      <if test="recordStatus != null" >
        record_status,
      </if>
      <if test="recordTime != null" >
        record_time,
      </if>
      <if test="recordActualAmount != null" >
        record_actual_amount,
      </if>
      <if test="recordAmount != null" >
        record_amount,
      </if>
      <if test="recordLateFee != null" >
        record_late_fee,
      </if>
      <if test="recordLateDate != null" >
        record_late_date,
      </if>
      <if test="recordRemark != null" >
        record_remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        #{recordId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="unitItemId != null" >
        #{unitItemId,jdbcType=VARCHAR},
      </if>
      <if test="recordItemName != null" >
        #{recordItemName,jdbcType=VARCHAR},
      </if>
      <if test="recordDate != null" >
        #{recordDate,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="recordTime != null" >
        #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recordActualAmount != null" >
        #{recordActualAmount,jdbcType=DECIMAL},
      </if>
      <if test="recordAmount != null" >
        #{recordAmount,jdbcType=DECIMAL},
      </if>
      <if test="recordLateFee != null" >
        #{recordLateFee,jdbcType=DECIMAL},
      </if>
      <if test="recordLateDate != null" >
        #{recordLateDate,jdbcType=INTEGER},
      </if>
      <if test="recordRemark != null" >
        #{recordRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.backstage.domain.model.ChargeItemRecord" >
    update charge_item_record
    <set >
      <if test="recordDate != null" >
        record_date = #{recordDate,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        record_status = #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="recordTime != null" >
        record_time = #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recordActualAmount != null" >
        record_actual_amount = #{recordActualAmount,jdbcType=DECIMAL},
      </if>
      <if test="recordAmount != null" >
        record_amount = #{recordAmount,jdbcType=DECIMAL},
      </if>
      <if test="recordLateFee != null" >
        record_late_fee = #{recordLateFee,jdbcType=DECIMAL},
      </if>
      <if test="recordLateDate != null" >
        record_late_date = #{recordLateDate,jdbcType=INTEGER},
      </if>
      <if test="recordRemark != null" >
        record_remark = #{recordRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where record_id = #{recordId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simon.backstage.domain.model.ChargeItemRecord" >
    update charge_item_record
    set user_id = #{userId,jdbcType=VARCHAR},
      unit_item_id = #{unitItemId,jdbcType=VARCHAR},
      record_item_name = #{recordItemName,jdbcType=VARCHAR},
      record_date = #{recordDate,jdbcType=VARCHAR},
      record_status = #{recordStatus,jdbcType=INTEGER},
      record_time = #{recordTime,jdbcType=TIMESTAMP},
      record_actual_amount = #{recordActualAmount,jdbcType=DECIMAL},
      record_amount = #{recordAmount,jdbcType=DECIMAL},
      record_late_fee = #{recordLateFee,jdbcType=DECIMAL},
      record_late_date = #{recordLateDate,jdbcType=INTEGER},
      record_remark = #{recordRemark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where record_id = #{recordId,jdbcType=VARCHAR}
  </update>

  <update id="charge" >
    update charge_item_record
    set
      record_status = 1,
      record_time = NOW(),
      record_actual_amount = record_amount
    where record_id in
      <foreach collection="list" item="item" separator="," open="(" close=")">
        #{item}
      </foreach>
  </update>

  <insert id="addBatch" keyProperty="jnId" useGeneratedKeys="true">
    insert into charge_item_record (record_id, user_id, unit_item_id,record_item_name,
    record_date, record_status, record_time,
    record_actual_amount, record_amount, record_late_fee,
    record_late_date, record_remark) values
    <foreach collection="list" item="item" separator=",">
      (#{item.recordId,jdbcType=VARCHAR}, #{item.userId,jdbcType=VARCHAR}, #{item.unitItemId,jdbcType=VARCHAR},#{item.recordItemName,jdbcType=VARCHAR},
      #{item.recordDate,jdbcType=VARCHAR}, #{item.recordStatus,jdbcType=INTEGER}, #{item.recordTime,jdbcType=TIMESTAMP},
      #{item.recordActualAmount,jdbcType=DECIMAL}, #{item.recordAmount,jdbcType=DECIMAL}, #{item.recordLateFee,jdbcType=DECIMAL},
      #{item.recordLateDate,jdbcType=INTEGER}, #{item.recordRemark,jdbcType=VARCHAR})
    </foreach>
  </insert>
</mapper>