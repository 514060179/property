<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simon.backstage.dao.AdvertisementMapper" >
  <resultMap id="BaseResultMap" type="com.simon.backstage.domain.model.Advertisement" >
    <id column="adv_id" property="advId" jdbcType="VARCHAR" />
    <result column="community_id" property="communityId" jdbcType="VARCHAR" />
    <result column="unit_id" property="buildingId" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="residence_time" property="residenceTime" jdbcType="INTEGER" />
    <result column="describe" property="describe" jdbcType="VARCHAR" />
    <result column="used" property="used" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <association property="community" javaType="com.simon.backstage.domain.vo.Community">
      <id column="community_id" property="communityId" jdbcType="VARCHAR" />
      <result column="community_no" property="communityNo" jdbcType="VARCHAR" />
      <result column="community_name" property="communityName" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  <sql id="Base_Column_List" >
    a.adv_id, a.community_id, a.building_id, a.title, a.`type`, a.url, a.residence_time, a.`describe`,a.used, a.create_time,
    c.community_id,c.community_no,c.community_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from advertisement a inner join community c on a.community_id=c.community_id
    where a.adv_id = #{advId,jdbcType=VARCHAR}
  </select>
  <select id="selectByConditon" resultMap="BaseResultMap" parameterType="com.simon.dal.vo.BaseQueryParam" >
    select
    <include refid="Base_Column_List" />
    from advertisement a inner join community c on a.community_id=c.community_id
    <where>
      <if test="keyword!=null and keyword!=''">
        CONCAT(IFNULL(a.title,'')) LIKE CONCAT('%', #{keyword}, '%')
      </if>
      <if test="communityId != null">
        AND a.community_id = #{communityId,jdbcType=VARCHAR}
      </if>
    </where>
    order by a.create_time desc
  </select>
  <select id="selectUsable" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from advertisement a inner join community c on a.community_id=c.community_id where a.used=1
    <if test="communityId != null">
      AND (a.community_id = #{communityId,jdbcType=VARCHAR} or a.community_id is null)
    </if>
    <if test="buildingId != null and buildingId != ''">
      AND (a.building_id = #{buildingId,jdbcType=VARCHAR} or a.building_id is null or a.building_id='')
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from advertisement
    where adv_id = #{advId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.simon.backstage.domain.model.Advertisement" >
    insert into advertisement (adv_id, community_id, building_id,
      title, `type`, url, residence_time,
      `describe`,used, create_time, update_time
      )
    values (#{advId,jdbcType=VARCHAR}, #{communityId,jdbcType=VARCHAR}, #{buildingId,jdbcType=VARCHAR},
      #{title,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{residenceTime,jdbcType=INTEGER}, 
      #{describe,jdbcType=VARCHAR},#{used,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.simon.backstage.domain.model.Advertisement" >
    insert into advertisement
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="advId != null" >
        adv_id,
      </if>
      <if test="communityId != null" >
        community_id,
      </if>
      <if test="buildingId != null and buildingId != ''" >
        building_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="residenceTime != null" >
        residence_time,
      </if>
      <if test="describe != null" >
        `describe`,
      </if>
      <if test="used != null" >
        used,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="advId != null" >
        #{advId,jdbcType=VARCHAR},
      </if>
      <if test="communityId != null" >
        #{communityId,jdbcType=VARCHAR},
      </if>
      <if test="buildingId != null and buildingId != ''" >
        #{buildingId,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="residenceTime != null" >
        #{residenceTime,jdbcType=INTEGER},
      </if>
      <if test="describe != null" >
        #{describe,jdbcType=VARCHAR},
      </if>
      <if test="used != null" >
        #{used,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch">
    insert into advertisement (adv_id, community_id, building_id,
          title, url, residence_time,
          `describe`,used
          ) values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.advId,jdbcType=VARCHAR}, #{item.communityId,jdbcType=VARCHAR}, #{item.buildingId,jdbcType=VARCHAR},
      #{item.title,jdbcType=VARCHAR},  #{item.url,jdbcType=VARCHAR}, 10,
      #{item.describe,jdbcType=VARCHAR},#{item.used,jdbcType=BIT}
      )
    </foreach>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.backstage.domain.model.Advertisement" >
    update advertisement
    <set >
      <if test="communityId != null" >
        community_id = #{communityId,jdbcType=VARCHAR},
      </if>
      <if test="buildingId != null and buildingId != ''" >
        building_id = #{buildingId,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="residenceTime != null" >
        residence_time = #{residenceTime,jdbcType=INTEGER},
      </if>
      <if test="describe != null" >
        `describe` = #{describe,jdbcType=VARCHAR},
      </if>
      <if test="used != null" >
        used = #{used,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where adv_id = #{advId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simon.backstage.domain.model.Advertisement" >
    update advertisement
    set community_id = #{communityId,jdbcType=VARCHAR},
      building_id = #{buildingId,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      residence_time = #{residenceTime,jdbcType=INTEGER},
      `describe` = #{describe,jdbcType=VARCHAR},
      used = #{used,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where adv_id = #{advId,jdbcType=VARCHAR}
  </update>
</mapper>