<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simon.backstage.dao.ChargeItemMapper" >
  <resultMap id="BaseResultMap" type="com.simon.backstage.domain.model.ChargeItem" >
    <id column="item_id" property="itemId" jdbcType="VARCHAR" />
    <result column="item_no" property="itemNo" jdbcType="VARCHAR" />
    <result column="community_id" property="communityId" jdbcType="VARCHAR" />
    <result column="item_name" property="itemName" jdbcType="VARCHAR" />
    <result column="billing_mode" property="billingMode" jdbcType="INTEGER" />
    <result column="alculation_method" property="alculationMethod" jdbcType="INTEGER" />
    <result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
    <result column="additional_cost" property="additionalCost" jdbcType="DECIMAL" />
    <result column="late_fee" property="lateFee" jdbcType="INTEGER" />
    <result column="late_date" property="lateDate" jdbcType="INTEGER" />
    <result column="formula" property="formula" jdbcType="VARCHAR" />
    <result column="describe" property="describe" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <association property="community" javaType="com.simon.backstage.domain.vo.Community">
      <id column="community_id" property="communityId" jdbcType="VARCHAR" />
      <result column="community_no" property="communityNo" jdbcType="VARCHAR" />
      <result column="community_name" property="communityName" jdbcType="VARCHAR" />
    </association>
  </resultMap>

  <resultMap id="WithUserResultMap" type="com.simon.backstage.domain.vo.UnitItemWithUser">
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="unit_item_id" property="unitItemId" jdbcType="VARCHAR" />
    <association property="chargeItem" javaType="com.simon.backstage.domain.model.ChargeItem">
      <id column="item_id" property="itemId" jdbcType="VARCHAR" />
      <result column="item_no" property="itemNo" jdbcType="VARCHAR" />
      <result column="community_id" property="communityId" jdbcType="VARCHAR" />
      <result column="item_name" property="itemName" jdbcType="VARCHAR" />
      <result column="billing_mode" property="billingMode" jdbcType="INTEGER" />
      <result column="alculation_method" property="alculationMethod" jdbcType="INTEGER" />
      <result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
      <result column="additional_cost" property="additionalCost" jdbcType="DECIMAL" />
      <result column="late_fee" property="lateFee" jdbcType="INTEGER" />
      <result column="late_date" property="lateDate" jdbcType="INTEGER" />
      <result column="formula" property="formula" jdbcType="VARCHAR" />
      <result column="describe" property="describe" jdbcType="VARCHAR" />
    </association>
    <association property="unit" javaType="com.simon.backstage.domain.model.Unit">
      <id column="unit_id" property="unitId" jdbcType="VARCHAR" />
      <result column="building_id" property="buildingId" jdbcType="VARCHAR" />
      <result column="community_id" property="communityId" jdbcType="VARCHAR" />
      <result column="unit_name" property="unitName" jdbcType="VARCHAR" />
      <result column="unit_no" property="unitNo" jdbcType="VARCHAR" />
      <result column="unit_covered_area" property="unitCoveredArea" jdbcType="DECIMAL" />
      <result column="unit_relative_proportion" property="unitRelativeProportion" jdbcType="DECIMAL" />
      <result column="unit_child_relative_proportion" property="unitChildRelativeProportion" jdbcType="DECIMAL" />
      <result column="unit_purpose" property="unitPurpose" jdbcType="VARCHAR" />
      <result column="unit_position" property="unitPosition" jdbcType="VARCHAR" />
      <result column="unit_type" property="unitType" jdbcType="INTEGER" />
      <result column="unit_full_address" property="unitFullAddress" jdbcType="VARCHAR" />
      <result column="unit_status" property="unitStatus" jdbcType="INTEGER" />
    </association>
  </resultMap>
  <sql id="Base_Column_List" >
    ci.item_id, ci.item_no,ci.community_id, ci.item_name, ci.billing_mode, ci.alculation_method, ci.unit_price,ci.additional_cost, ci.late_fee,
    ci.late_date, ci.formula, ci.`describe`, ci.create_time, ci.update_time,
    c.community_id,c.community_no,c.community_name
  </sql>
  <sql id="With_Other_Column_List" >
    ci.item_id, ci.item_no,ci.community_id, ci.item_name, ci.billing_mode, ci.alculation_method, ci.unit_price,ci.additional_cost, ci.late_fee,
    ci.late_date, ci.formula, ci.`describe`, ci.create_time, ci.update_time
  </sql>
  <sql id="With_User_Column_List" >
    ci.item_id, ci.item_no,ci.community_id, ci.item_name, ci.billing_mode, ci.alculation_method, ci.unit_price,ci.additional_cost, ci.late_fee,
    ci.late_date, ci.formula, ci.`describe`,
    uci.unit_item_id,uu.user_id,
    u.unit_id, u.building_id,u.community_id, u.unit_name, u.unit_no, u.unit_covered_area, u.unit_relative_proportion,
    u.unit_child_relative_proportion, u.unit_purpose, u.unit_position, u.unit_type, u.unit_full_address,
    u.unit_status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from charge_item ci inner join community c on ci.community_id=c.community_id
    where ci.item_id = #{itemId,jdbcType=VARCHAR}
  </select>
  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="com.simon.dal.vo.BaseQueryParam" >
    select
    <include refid="Base_Column_List" />
    from charge_item ci inner join community c on ci.community_id=c.community_id
    <where>
      <if test="keyword!=null and keyword!=''">
        CONCAT(IFNULL(ci.item_no,''),IFNULL(ci.item_name,'')) LIKE CONCAT('%', #{keyword}, '%')
      </if>
      <if test="communityId != null">
        AND ci.community_id = #{communityId,jdbcType=VARCHAR}
      </if>
    </where>
    order by create_time desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from charge_item
    where item_id = #{itemId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.simon.backstage.domain.model.ChargeItem" >
    insert into charge_item (item_id, item_no,community_id, item_name,
      billing_mode, alculation_method, unit_price, additional_cost,
      late_fee, late_date, formula, 
      `describe`, create_time, update_time
      )
    values (#{itemId,jdbcType=VARCHAR}, #{itemNo,jdbcType=VARCHAR},#{communityId,jdbcType=VARCHAR}, #{itemName,jdbcType=VARCHAR},
      #{billingMode,jdbcType=INTEGER}, #{alculationMethod,jdbcType=INTEGER}, #{unitPrice,jdbcType=DECIMAL},#{additionalCost,jdbcType=DECIMAL},
      #{lateFee,jdbcType=INTEGER}, #{lateDate,jdbcType=INTEGER}, #{formula,jdbcType=VARCHAR}, 
      #{describe,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.simon.backstage.domain.model.ChargeItem" >
    insert into charge_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="itemId != null" >
        item_id,
      </if>
      <if test="itemNo != null" >
        item_no,
      </if>
      <if test="communityId != null" >
        community_id,
      </if>
      <if test="itemName != null" >
        item_name,
      </if>
      <if test="billingMode != null" >
        billing_mode,
      </if>
      <if test="alculationMethod != null" >
        alculation_method,
      </if>
      <if test="unitPrice != null" >
        unit_price,
      </if>
      <if test="additionalCost != null" >
        additional_cost,
      </if>
      <if test="lateFee != null" >
        late_fee,
      </if>
      <if test="lateDate != null" >
        late_date,
      </if>
      <if test="formula != null" >
        formula,
      </if>
      <if test="describe != null" >
        `describe`,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="itemId != null" >
        #{itemId,jdbcType=VARCHAR},
      </if>
      <if test="itemNo != null" >
        #{itemNo,jdbcType=VARCHAR},
      </if>
      <if test="communityId != null" >
        #{communityId,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null" >
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="billingMode != null" >
        #{billingMode,jdbcType=INTEGER},
      </if>
      <if test="alculationMethod != null" >
        #{alculationMethod,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null" >
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="additionalCost != null" >
        #{additionalCost,jdbcType=DECIMAL},
      </if>
      <if test="lateFee != null" >
        #{lateFee,jdbcType=INTEGER},
      </if>
      <if test="lateDate != null" >
        #{lateDate,jdbcType=INTEGER},
      </if>
      <if test="formula != null" >
        #{formula,jdbcType=VARCHAR},
      </if>
      <if test="describe != null" >
        #{describe,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.backstage.domain.model.ChargeItem" >
    update charge_item
    <set >
      <if test="itemNo != null" >
        item_no = #{itemNo,jdbcType=VARCHAR},
      </if>
      <if test="communityId != null" >
        community_id = #{communityId,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null" >
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="billingMode != null" >
        billing_mode = #{billingMode,jdbcType=INTEGER},
      </if>
      <if test="alculationMethod != null" >
        alculation_method = #{alculationMethod,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null" >
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="additionalCost != null" >
        additional_cost = #{additionalCost,jdbcType=DECIMAL},
      </if>
      <if test="lateFee != null" >
        late_fee = #{lateFee,jdbcType=INTEGER},
      </if>
      <if test="lateDate != null" >
        late_date = #{lateDate,jdbcType=INTEGER},
      </if>
      <if test="formula != null" >
        formula = #{formula,jdbcType=VARCHAR},
      </if>
      <if test="describe != null" >
        `describe` = #{describe,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where item_id = #{itemId,jdbcType=VARCHAR}
  </update>
  <update id="updateAllTemporary">
    update unit_charge_item set `type`=2 where `type`=1
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simon.backstage.domain.model.ChargeItem" >
    update charge_item
    set item_no = #{itemNo,jdbcType=VARCHAR},
      community_id = #{communityId,jdbcType=VARCHAR},
      item_name = #{itemName,jdbcType=VARCHAR},
      billing_mode = #{billingMode,jdbcType=INTEGER},
      alculation_method = #{alculationMethod,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      additional_cost = #{additionalCost,jdbcType=DECIMAL},
      late_fee = #{lateFee,jdbcType=INTEGER},
      late_date = #{lateDate,jdbcType=INTEGER},
      formula = #{formula,jdbcType=VARCHAR},
      `describe` = #{describe,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where item_id = #{itemId,jdbcType=VARCHAR}
  </update>

  <insert id="unitAddItem">
    insert into unit_charge_item(unit_item_id,item_id,unit_id,`type`) values
    <foreach collection="list" item="item" separator=",">
      (
      #{item.unitItemId},#{item.itemId},#{item.unitId},#{item.type}
      )
    </foreach>
  </insert>

  <select id="unitItemList" resultMap="BaseResultMap" parameterType="com.simon.dal.vo.BaseQueryParam" >
    select
    <include refid="With_Other_Column_List" />
    from unit_charge_item uci inner join charge_item ci on uci.`item_id`=ci.`item_id`
    inner join unit u on uci.unit_id = u.unit_id
    <where>
      <if test="keyword!=null and keyword!=''">
        CONCAT(IFNULL(ci.item_no,''),IFNULL(ci.item_name,'')) like CONCAT('%', #{keyword}, '%')
      </if>
      <if test="unitId != null">
        AND uci.unit_id = #{unitId,jdbcType=VARCHAR}
      </if>
      <if test="unitNo != null">
        AND u.unit_no = #{unitNo,jdbcType=VARCHAR}
      </if>
    </where>
    order by uci.create_time desc
  </select>

  <select id="cycleUnitItem" resultMap="WithUserResultMap">
    select
    <include refid="With_User_Column_List" />
    from unit_charge_item uci inner join charge_item ci on uci.`item_id`=ci.`item_id` and uci.`type`!=2
    inner join user_unit uu on uci.unit_id=uu.unit_id and `owner`=1
    inner join unit u on uu.unit_id=u.unit_id
  </select>
</mapper>