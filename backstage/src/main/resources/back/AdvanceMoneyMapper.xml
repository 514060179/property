<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simon.backstage.dao.AdvanceMoneyMapper" >
  <resultMap id="BaseResultMap" type="com.simon.backstage.domain.model.AdvanceMoney" >
    <id column="advance_id" property="advanceId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="advance_amount" property="advanceAmount" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    advance_id, user_id, advance_amount, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from advance_money
    where advance_id = #{advanceId,jdbcType=VARCHAR}
  </select>
  <select id="findByUserId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from advance_money
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from advance_money
    where advance_id = #{advanceId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.simon.backstage.domain.model.AdvanceMoney" >
    insert into advance_money (advance_id, user_id, advance_amount, 
      create_time, update_time)
    values (#{advanceId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{advanceAmount,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.simon.backstage.domain.model.AdvanceMoney" >
    insert into advance_money
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="advanceId != null" >
        advance_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="advanceAmount != null" >
        advance_amount,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="advanceId != null" >
        #{advanceId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="advanceAmount != null" >
        #{advanceAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.backstage.domain.model.AdvanceMoney" >
    update advance_money
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="advanceAmount != null" >
        advance_amount = advance_amount + #{advanceAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where advance_id = #{advanceId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simon.backstage.domain.model.AdvanceMoney" >
    update advance_money
    set user_id = #{userId,jdbcType=VARCHAR},
      advance_amount = #{advanceAmount,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where advance_id = #{advanceId,jdbcType=VARCHAR}
  </update>
</mapper>