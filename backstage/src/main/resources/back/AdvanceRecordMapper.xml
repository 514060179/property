<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simon.backstage.dao.AdvanceRecordMapper" >
  <resultMap id="BaseResultMap" type="com.simon.backstage.domain.model.AdvanceRecord" >
    <id column="advance_record_id" property="advanceRecordId" jdbcType="VARCHAR" />
    <result column="advance_id" property="advanceId" jdbcType="VARCHAR" />
    <result column="advance_amount" property="advanceAmount" jdbcType="DECIMAL" />
    <result column="advance_type" property="advanceType" jdbcType="INTEGER" />
    <result column="advance_describe" property="advanceDescribe" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    advance_record_id, advance_id, advance_amount, advance_type, advance_describe, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from advance_record
    where advance_record_id = #{advanceRecordId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from advance_record
    where advance_record_id = #{advanceRecordId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.simon.backstage.domain.model.AdvanceRecord" >
    insert into advance_record (advance_record_id, advance_id, advance_amount, 
      advance_type, advance_describe, create_time, 
      update_time)
    values (#{advanceRecordId,jdbcType=VARCHAR}, #{advanceId,jdbcType=VARCHAR}, #{advanceAmount,jdbcType=DECIMAL}, 
      #{advanceType,jdbcType=INTEGER}, #{advanceDescribe,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.simon.backstage.domain.model.AdvanceRecord" >
    insert into advance_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="advanceRecordId != null" >
        advance_record_id,
      </if>
      <if test="advanceId != null" >
        advance_id,
      </if>
      <if test="advanceAmount != null" >
        advance_amount,
      </if>
      <if test="advanceType != null" >
        advance_type,
      </if>
      <if test="advanceDescribe != null" >
        advance_describe,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="advanceRecordId != null" >
        #{advanceRecordId,jdbcType=VARCHAR},
      </if>
      <if test="advanceId != null" >
        #{advanceId,jdbcType=VARCHAR},
      </if>
      <if test="advanceAmount != null" >
        #{advanceAmount,jdbcType=DECIMAL},
      </if>
      <if test="advanceType != null" >
        #{advanceType,jdbcType=INTEGER},
      </if>
      <if test="advanceDescribe != null" >
        #{advanceDescribe,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.backstage.domain.model.AdvanceRecord" >
    update advance_record
    <set >
      <if test="advanceId != null" >
        advance_id = #{advanceId,jdbcType=VARCHAR},
      </if>
      <if test="advanceAmount != null" >
        advance_amount = #{advanceAmount,jdbcType=DECIMAL},
      </if>
      <if test="advanceType != null" >
        advance_type = #{advanceType,jdbcType=INTEGER},
      </if>
      <if test="advanceDescribe != null" >
        advance_describe = #{advanceDescribe,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where advance_record_id = #{advanceRecordId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simon.backstage.domain.model.AdvanceRecord" >
    update advance_record
    set advance_id = #{advanceId,jdbcType=VARCHAR},
      advance_amount = #{advanceAmount,jdbcType=DECIMAL},
      advance_type = #{advanceType,jdbcType=INTEGER},
      advance_describe = #{advanceDescribe,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where advance_record_id = #{advanceRecordId,jdbcType=VARCHAR}
  </update>
</mapper>