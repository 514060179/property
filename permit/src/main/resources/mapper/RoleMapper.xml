<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simon.permit.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.simon.permit.model.Role" >
    <id column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_description" property="roleDescription" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <!--携带角色权限列表-->
  <resultMap id="BaseWithJnResultMap" type="com.simon.permit.model.Role" >
    <id column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_description" property="roleDescription" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <collection property="jurisdictionList" ofType="com.simon.permit.model.Jurisdiction" javaType="ArrayList" >
      <id column="jn_id" property="jnId" jdbcType="BIGINT" />
      <id column="jn_pid" property="jnPid" jdbcType="BIGINT" />
      <result column="jn_name" property="jnName" jdbcType="VARCHAR" />
      <result column="jn_url" property="jnUrl" jdbcType="VARCHAR" />
      <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    role_id, role_name,role_description, create_time, update_time
  </sql>
  <!--携带角色权限列表-->
  <sql id="Base_With_Jn_Column_List" >
    r.role_id, r.role_name,r.role_description, r.create_time, r.update_time,
    j.jn_id,j.jn_pid,j.jn_name,j.jn_url,j.create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.simon.permit.model.Role" >
    insert into role (role_id, role_name,role_description, create_time,
      update_time)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR},#{roleDescription,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.simon.permit.model.Role" useGeneratedKeys="true" keyProperty="roleId" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleDescription != null" >
        role_description,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDescription != null" >
        #{roleDescription,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.permit.model.Role" >
    update role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDescription != null" >
        role_description = #{roleDescription,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simon.permit.model.Role" >
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_description = #{roleDescription,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>

  <select id="findListByAccountId" resultType="string">
    SELECT DISTINCT j.jn_url
    FROM user u LEFT JOIN user_role ur ON u.user_id=ur.account_id
    LEFT JOIN role_jn rj ON ur.role_id=rj.role_id
    INNER JOIN jurisdiction j ON rj.jn_id = j.jn_id
    WHERE u.account_id=#{accountId}
  </select>

  <select id="findRoleListByAccountId" resultType="string">
    SELECT role_name
    FROM account u LEFT JOIN user_role ur ON u.account_id=ur.account_id
    LEFT JOIN role r ON ur.role_id=r.role_id
     WHERE u.account_id=#{accountId}
  </select>

  <select id="findAll" resultMap="BaseWithJnResultMap">
    SELECT <include refid="Base_With_Jn_Column_List"/>
    FROM role r
    LEFT JOIN role_jn rj ON r.role_id=rj.role_id
    LEFT JOIN jurisdiction j ON rj.jn_id=j.jn_id
  </select>

  <select id="findByCondition" resultMap="BaseWithJnResultMap">
    SELECT <include refid="Base_Column_List"/>
    FROM role
    <where>
      <if test="keyword != null and keyword != ''">
        CONCAT(IFNULL(`role_name`,''),IFNULL(`role_description`,'')) LIKE CONCAT('%',#{keyword},'%')
      </if>
    </where>
  </select>

  <select id="findCustomRolesAuthorization" resultType="map">
    SELECT
      j.jn_url AS url,
      concat(group_concat(r.role_name),'') AS roleName
    FROM role r
    LEFT JOIN role_jn rj ON r.role_id=rj.role_id
    LEFT JOIN jurisdiction j ON rj.jn_id=j.jn_id
    GROUP BY  j.jn_url
  </select>


</mapper>